<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo9.risk.modules.dunning.dao.TMisRemittanceMessageDao">

	<sql id="tMisRemittanceMessageColumns">
		a.dbid AS "dbid",
		a.id AS "id",
		a.remittancename AS "remittanceName",
		a.remittancetime AS "remittanceTime",
		a.remittanceamount AS "remittanceAmount",
		a.remittancechannel AS "remittanceChannel",
		a.remittanceaccount AS "remittanceAccount",
		a.financialuser AS "financialUser",
		a.financialtime AS "financialTime",
		a.dealcode AS "dealcode",
		a.remark AS "remark",
		a.createdate AS "createDate",
		a.remittanceSerialNumber AS "remittanceSerialNumber",
		a.accountStatus AS "accountStatus",
		a.remittanceTag AS "remittanceTag"
	</sql>
	
	<sql id="tMisRemittanceMessageJoins">
	</sql>

	<!--计算剩余待还金额  t_risk_order AS o -->
	<sql id="countRemainAmmount">
		CASE WHEN o.`status` = 'payoff' THEN 0 ELSE IFNULL(o.credit_amount, 0) - CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) ELSE 0 END + IFNULL(o.overdue_amount, 0) - IFNULL(o.balance, 0) END
	</sql>

	<select id="get" resultType="TMisRemittanceMessage">
		SELECT 
			<include refid="tMisRemittanceMessageColumns"/>
		FROM t_mis_remittance_message a
		<include refid="tMisRemittanceMessageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TMisRemittanceMessage">
		SELECT 
			<include refid="tMisRemittanceMessageColumns"/>
		FROM t_mis_remittance_message a
		<include refid="tMisRemittanceMessageJoins"/>
		<where>
			<if test="remittancename != null and remittancename != ''">
				AND a.remittancename = #{remittancename}
			</if>
			<if test="remittancetime != null and remittancetime != ''">
				AND a.remittancetime = #{remittancetime}
			</if>
			<if test="remittancechannel != null and remittancechannel != ''">
				AND a.remittancechannel = #{remittancechannel}
			</if>
			<if test="financialuser != null and financialuser != ''">
				AND a.financialuser = #{financialuser}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findRemittanceMesListByDealcode" resultType="TMisRemittanceMessage">
		SELECT 
			<include refid="tMisRemittanceMessageColumns"/>
		FROM t_mis_remittance_message a
			WHERE a.dealcode = #{dealcode}
		ORDER BY a.createdate DESC limit  1 
	</select>

	<select id="findBySerialNumbers" resultType="TMisRemittanceMessage">
			select
			<include refid="tMisRemittanceMessageColumns"/>
			from t_mis_remittance_message a
			where
			a.remittanceSerialNumber  in
			<foreach collection="list" item="tMisRemittanceMessage"  index="index"  separator="," open="(" close=")">
			   #{tMisRemittanceMessage.remittanceSerialNumber}
			</foreach>
			and
			a.remittancechannel = #{channel}
			
	</select>


	<insert id="saveList" parameterType="java.util.List">
		insert into t_mis_remittance_message
		(
			id,
			remittancename,
			remittancetime,
			remittanceamount,
			remittancechannel,
			remittanceaccount,
			financialuser,
			financialtime,
			dealcode,
			remark,
			createDate,
			remittanceSerialNumber,
			accountStatus,
			updateDate,
			updateby
		)
		values
		<foreach collection="list" index="index" item="item" separator="," >
		(
			#{item.id},
			#{item.remittanceName},
			#{item.remittanceTime},
			#{item.remittanceAmount},
			#{item.remittanceChannel},
			#{item.remittanceAccount},
			#{item.financialUser},
			#{item.financialTime},
			#{item.dealcode},
			#{item.remark},
			#{item.createDate},
			#{item.remittanceSerialNumber},
			#{item.accountStatus},
			#{item.updateDate},
			#{item.updateBy.id}
		)
		</foreach>


	</insert>


	<select id="findPaymentOrderByMobiles" resultType="com.mo9.risk.modules.dunning.entity.DunningOrder" parameterType="java.util.List">
		SELECT
		o.dealcode AS "dealcode",
		b.mobile AS "mobile",
		idc.real_name AS "realname"
		FROM
		t_risk_order AS o
		LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
		LEFT JOIN t_risk_buyer_idcard AS idc ON idc.buyer_id = o.buyer_id
		WHERE
		o.merchant_id = 7
		AND o.`status`= 'payment'
		AND o.type = 'loan'
		AND b.mobile IN
		<foreach collection="list" item="mobile" open="(" separator="," close=")">
			#{mobile}
		</foreach>
	</select>

	<select id="findPaymentOrderByMobile" resultType="com.mo9.risk.modules.dunning.entity.DunningOrder" parameterType="java.util.List">
		SELECT
		idc.real_name AS "realname",
		o.dealcode AS "dealcode",
		b.mobile AS "mobile",
		o.amount AS "amount",
		<include refid="countRemainAmmount"/> AS creditamount,
		DATEDIFF(CURDATE(), o.repayment_time) AS overduedays,
		p.`nickname` AS `dunningPeople.nickname`
		FROM
		t_risk_order AS o
		LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
		LEFT JOIN t_risk_buyer_idcard AS idc ON idc.buyer_id = o.buyer_id
		LEFT JOIN t_mis_dunning_task AS t ON t.dealcode = o.dealcode
		LEFT JOIN t_mis_dunning_people AS p ON t.DunningPeopleId = p.id
		WHERE
		o.merchant_id = 7
		AND o.`status`= 'payment'
		AND o.type = 'loan'
		AND b.mobile = #{mobile}
	</select>

	<update id="batchUpdateMatched" >
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			UPDATE t_mis_remittance_message
			<set>
				updateDate = now(),
				updateby = "sys",
				dealcode = #{item.dealcode},
				accountStatus = #{item.accountStatus},
				remittanceTag = #{item.remittanceTag}
			</set>
			WHERE id = #{item.id}
		</foreach>
	</update>

	<select id="findAfterFinancialTimeNotAuditList" resultType="TMisRemittanceMessage">
		SELECT
			<include refid="tMisRemittanceMessageColumns"/>
		FROM
			t_mis_remittance_message AS a
		WHERE
			accountStatus = "NOT_AUDIT"
		<if test="date != null">
			<![CDATA[
      	AND a.financialtime > #{date}
      ]]>
		</if>
	</select>

	<select id="findAccountPageList" resultType="TMisRemittanceMessage">
		select
		*
		from
		t_mis_remittance_message m
		<where>
		<if test="  remittanceSerialNumber!= null and   remittanceSerialNumber!= ''">
			and m.remittanceSerialNumber =#{ remittanceSerialNumber}
		</if>
<!-- 		 <if test="begindealtime != null and enddealtime != null and begindealtime != '' and enddealtime != ''"> -->
<!--                 AND  m.remittancetime BETWEEN #{begindealtime} AND #{enddealtime} -->
<!--             </if> -->
		<if test=" begindealtime!= null and  begindealtime!= ''">
			 <![CDATA[
    			and m.remittancetime >= #{begindealtime} 
   		 	]]> 
		</if>
		<if test=" enddealtime!= null and  enddealtime!= ''">
			 <![CDATA[
     			and m.remittancetime <=#{enddealtime} 
       		 ]]> 
		</if>
		<if test="  remittanceAmount!= null and   remittanceAmount!= ''">
			and m.remittanceamount =#{ remittanceAmount}
		</if>
		<if test="  remittanceAccount!= null and   remittanceAccount!= ''">
			and m.remittanceaccount =#{ remittanceAccount}
		</if>
		<if test="  remittanceName!= null and   remittanceName!= ''">
			and m.remittancename =#{ remittanceName}
		</if>
		<if test="  accountStatus!= null and   accountStatus!= ''">
			and m.accountStatus =#{ accountStatus}
		</if>
		</where>
		
		<choose>
            <when test=" page !=null and  page.orderBy != null and  page.orderBy != ''">
                ORDER BY ${ page.orderBy}
            </when>
            <otherwise>
              
            </otherwise>
        </choose>
	</select>
	
	<update id="updateList" parameterType="java.util.List">
			<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			UPDATE t_mis_remittance_message
			<set>
			id=#{item.id},
			remittancename=#{item.remittanceName},                           
			remittancetime=#{item.remittanceTime},
			remittanceamount=#{item.remittanceAmount},
			remittancechannel=#{item.remittanceChannel},
			remittanceaccount=#{item.remittanceAccount},
			financialuser=#{item.financialUser},
			financialtime=#{item.financialTime},
			dealcode=#{item.dealcode},
			remark=#{item.remark},
			createDate=#{item.createDate},
			remittanceSerialNumber=#{item.remittanceSerialNumber},
			accountStatus=#{item.accountStatus},
			updateDate=#{item.updateDate},
			updateby=#{item.updateBy.id}
			
			</set>
			WHERE remittanceSerialNumber = #{item.remittanceSerialNumber} and accountStatus=#{channel}
		</foreach>
	
	
	</update>

	<select id="findMessagCheckedList" resultType="com.mo9.risk.modules.dunning.entity.TMisRemittanceMessagChecked">
	
	  select
	  idc.real_name AS "realName",
	  b.mobile AS "mobile",
	  m.dealcode AS "dealcode",
	  p.nickname AS "nickName"
	  o.amount AS "amount",
	  CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) * 100 ELSE 0 END as "modifyamount",
	  <include refid="countRemainAmmount"/> AS "creditamount",
	  m.remittanceSerialNumber AS "remittanceSerialNumber",
	  m.checkedPeople AS "checkedPeople",
	  o.status AS "orderStatus",
	  m.RemittanceTag AS "remittanceTag",
	  from
	  t_mis_remittance_message m
	  LEFT JOIN t_risk_order AS o ON m.dealcode = o.dealcode
	  LEFT JOIN t_mis_dunning_task AS t ON t.dealcode = o.dealcode
      LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
      LEFT JOIN t_risk_buyer_idcard AS idc ON idc.buyer_id = o.buyer_id
      LEFT JOIN t_mis_dunning_people AS p ON t.DunningPeopleId = p.id
	   WHERE
		o.type = 'loan' 
        AND o.merchant_id = 7
		AND o.`status`IN ('payoff', 'payment' )
		AND m.accountStatus="COMPLETE_AUDIT"
		 <if test=" mobile!= null and  mobile!= ''">
                AND b.mobile=#{mobile}
        </if>
		 <if test=" realName!= null and  realName!= ''">
                AND idc.real_name=#{realName}
        </if>
		 <if test=" dealcode!= null and  dealcode!= ''">
                AND m.dealcode=#{dealcode}
        </if>
		 <if test=" remittanceSerialNumber!= null and  remittanceSerialNumber!= ''">
                AND m.remittanceSerialNumber=#{remittanceSerialNumber}
        </if>
		 <if test=" orderStatus!= null and  orderStatus!= ''">
                AND o.status=#{orderStatus}
        </if>
		 <if test=" remittanceTag!= null and  remittanceTag!= ''">
                AND m.remittanceTag=#{remittanceTag}
        </if>
	</select>
	
	
</mapper>