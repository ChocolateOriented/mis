<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo9.risk.modules.dunning.dao.SMisDunningTaskMonthReportDao">
    
	<sql id="sMisDunningTaskMonthReportColumns">
		a.id AS "id",
		a.months AS "months",
		a.monthdesc AS "monthdesc",
		a.name AS "name",
		a.dunningcycle AS "dunningcycle",
		a.taskdunningcycle AS "taskdunningcycle",
		a.dunningordernumber AS "dunningordernumber",
		a.finishedordernumber AS "finishedordernumber",
		a.dunningcorpusamount AS "dunningcorpusamount",
		a.finishedcorpusamount AS "finishedcorpusamount",
		a.finishedAndDelayAmount AS "finishedAndDelayAmount",
		a.finishedanddelaycorpusamount AS "finishedanddelaycorpusamount",
		a.amount AS "amount",
		a.creditamount AS "creditamount",
		a.unfinishedtask AS "unfinishedtask",
		a.unfinishedcorpusamount AS "unfinishedcorpusamount",
		a.createdate AS "createdate"
	</sql>
	
	<sql id="sMisDunningTaskMonthReportJoins">
	</sql>
    
	<select id="get" resultType="SMisDunningTaskMonthReport">
		SELECT 
			<include refid="sMisDunningTaskMonthReportColumns"/>
		FROM s_mis_dunning_task_month_report a
		<include refid="sMisDunningTaskMonthReportJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SMisDunningTaskMonthReport">
		SELECT 
			<include refid="sMisDunningTaskMonthReportColumns"/>
		FROM s_mis_dunning_task_month_report a
		<include refid="sMisDunningTaskMonthReportJoins"/>
		<where>
			<if test="monthdesc != null and monthdesc != ''">
				AND a.monthdesc = #{monthdesc}
			</if>
			<if test="months != null and months != ''">
				AND a.months = #{months}
			</if>
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="createDate != null">
				AND DATE_FORMAT(a.createdate, '%Y%m%d') = DATE_FORMAT(#{createDate}, '%Y%m%d')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<!--  迁徙率 begin	 -->
	
	<!--  # 更新已经采集的逾期订单	 -->
	<update id="updateHaveBeenCollectDealcode">
		<![CDATA[
			UPDATE t_risk_order as o 
			INNER JOIN tmp_move_rate AS r on r.dealcode = o.dealcode
			SET r.PayoffTime = DATE(o.payoff_time),
				r.OperatorStatus = 
				CASE 
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) = 0 
					THEN 'payoff'
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) > 0 
					THEN 'delay'
					ELSE NULL
				END;
		]]>
	</update>
	
	<!--  # 采集今天逾期一天的数据	 -->
	<insert id="insert">
		<![CDATA[
    		INSERT INTO tmp_move_rate(id, AddTime, dealcode, CorpusAmount,PayoffTime,OrderStatus,OperatorStatus,cycle)
			SELECT
				NULL AS id,
				DATE(DATE_ADD(o.repayment_time, INTERVAL 1 DAY)) AS AddTime,
				dealcode,
				IFNULL(o.amount, 0) - IFNULL(o.cost_amount, 0) AS CorpusAmount,
				DATE(o.payoff_time) AS PayoffTime,
				o.`status`,
				CASE 
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) = 0 
					THEN 'payoff'
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) > 0 
					THEN 'delay'
					ELSE NULL
				END AS OperatorStatus,
				@cycle AS cycle
			FROM t_risk_order AS o 
			WHERE o.type = 'loan'
				AND o.merchant_id = 7
				AND o.`status` IN ('payment', 'payoff')
				AND o.repayment_time >= @datetime_start
				AND o.repayment_time <  @datetime_end
				AND (DATE(o.payoff_time) > DATE(o.repayment_time)
					OR o.payoff_time is null)
			order by AddTime; 
      	]]>
	</insert>
	
	
	
	<!--  # 采集新的迁徙率的统计数据	 -->
	<insert id="insert">
		<![CDATA[
    		insert into data_center.t_mis_dunning_qianxilv_new(createTime,Q1)
			select 
				AddTime,
				COUNT(1) AS Q1
			from data_center.tmp_move_rate AS r 
			LEFT JOIN data_center.tmp_move_cycle AS c ON r.cycle  =c.cycle
			WHERE r.AddTime >= @datetime_start
				AND r.AddTime < @datetime_end
			GROUP BY AddTime;
      	]]>
	</insert>
	
	
	<!--  # 更新已经采集的逾期订单	 -->
	<update id="updateHaveBeenCollectDealcode">
		<![CDATA[
			UPDATE t_risk_order as o 
			INNER JOIN tmp_move_rate AS r on r.dealcode = o.dealcode
			SET r.PayoffTime = DATE(o.payoff_time),
				r.OperatorStatus = 
				CASE 
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) = 0 
					THEN 'payoff'
					WHEN o.`status` = 'payoff'
						AND IFNULL(o.delay_days, 0) > 0 
					THEN 'delay'
					ELSE NULL
				END;
		]]>
	</update>
	
	
	
	<!--  迁徙率 end	 -->
</mapper>