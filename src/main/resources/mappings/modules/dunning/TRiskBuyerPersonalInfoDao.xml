<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo9.risk.modules.dunning.dao.TRiskBuyerPersonalInfoDao">
  	
  	<!--计算剩余待还金额  t_risk_order AS o -->
    <sql id="countRemainAmmount">
    	CASE WHEN o.`status` = 'payoff' THEN 0 ELSE IFNULL(o.credit_amount, 0) - CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) ELSE 0 END + IFNULL(o.overdue_amount, 0) - IFNULL(o.balance, 0) END
    </sql>
	<!--计算还款金额  t_risk_order AS o -->
	<sql id="countBalance">
		 CASE WHEN o.`status` = 'payoff' THEN (IFNULL(o.credit_amount, 0) + IFNULL(o.overdue_amount, 0) - CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) ELSE 0 END ) ELSE IFNULL(o.balance, 0) END
    </sql>
    
	<select id = "getBuyerInfoByDealcode" resultType="TRiskBuyerPersonalInfo">
	  SELECT
		o.dealcode as "dealcode",
		o.create_time as "createTime",
		o.remit_time as "remitTime",
		o.repayment_time as "repaymentTime",
		o.buyer_id as "buyerId",
		b.mobile as "mobile",
		b.mobile_city as "mobileCity",
		b.marital as "marital", 
		c.real_name as "realName",
		c.idCard as "idcard",
<!-- 		CONCAT(IFNULL(b.addr_province, ""),IFNULL(b.addr_city, ""),IFNULL(b.addr_district, ""),IFNULL(b.address, "")) as "livingAddr", -->
		CASE 
			WHEN b.addr_province IS NOT NULL 
			THEN CONCAT(IFNULL(b.addr_province, ""),IFNULL(b.addr_city, ""),IFNULL(b.addr_district, ""))
			ELSE IFNULL(b.address, "")
		END as "livingAddr",
		
		c.ocr_addr as "ocrAddr",
		o.days as "days",
		o.payoff_time as payOffTime,
		CASE 
			WHEN o.`status` = 'payment' THEN DATEDIFF(curdate(), o.repayment_time) 
			ELSE 0
		END as "overdueDays",
		(IFNULL(o.amount, 0) - IFNULL(o.cost_amount, 0)) * 100 as "corpusAmount",
		IFNULL(o.cost_amount, 0) * 100  as "costAmout",
		IFNULL(o.amount, 0) * 100 as "amount",
		IFNULL(o.overdue_amount, 0) * 100 as "overdueAmount",
		(IFNULL(o.amount, 0) - ifnull(o.credit_amount, 0)) * 100 as "discountAmount",
		(<include refid="countBalance"/>) * 100 as "balance",
		CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) * 100 ELSE 0 END as "modifyAmount",
		(<include refid="countRemainAmmount"/>) * 100 as "creditAmount",
		IFNULL(r.Delay_Count, 0) As delayCount,
		c.sex As sex
	FROM t_risk_order AS o
	LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
	LEFT JOIN t_risk_buyer_idcard AS c ON o.buyer_id = c.buyer_id
	LEFT JOIN (
		SELECT 
			root_order_id,
			COUNT(1) AS Delay_Count
		FROM t_risk_order
		WHERE
			type = 'loan'
				AND merchant_id = 7
				AND root_order_id IS NOT NULL
		GROUP BY
			root_order_id
	) AS r on o.root_order_id = r.root_order_id
	WHERE o.type = 'loan' AND o.merchant_id = 7 AND o.status in ('payment', 'payoff') and o.dealcode = #{dealcode} order by c.buyer_id desc limit 1
	</select>
	<select id = "getSelfTelInfo" resultType = 'TMisSendMsgInfo'>
		SELECT 	   	
			b.id as "buyerId",
			b.mobile as "tel",
			c.real_name as "name",
			c.idCard as memo,
			'self' as relation
		FROM t_risk_buyer as b
		INNER JOIN t_risk_buyer_idcard AS c ON b.id = c.buyer_id 
		WHERE b.id = #{buyerId}
	</select>
	
	<select id = "getBuyerListByRepaymentTime" resultType="TRiskBuyerPersonalInfo" parameterType="map">
	  SELECT
		o.dealcode as "dealcode",
		o.create_time as "createTime",
		o.remit_time as "remitTime",
		o.repayment_time as "repaymentTime",
		o.buyer_id as "buyerId",
		b.mobile as "mobile",
		c.real_name as "realName",
		c.idCard as "idcard",
		o.days as "days",
		o.payoff_time as payOffTime,
		DATEDIFF(curdate(), o.repayment_time) as "overdueDays",
		(IFNULL(o.amount, 0) - IFNULL(o.cost_amount, 0)) * 100 as "corpusAmount",
		IFNULL(o.cost_amount, 0) * 100  as "costAmout",
		IFNULL(o.amount, 0) * 100 as "amount",
		IFNULL(o.overdue_amount, 0) * 100 as "overdueAmount",
		(IFNULL(o.amount, 0) - ifnull(o.credit_amount, 0)) * 100 as "discountAmount",
		(<include refid="countBalance"/>) * 100 as "balance",
		CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) * 100 ELSE 0 END as "modifyAmount",
		(<include refid="countRemainAmmount"/>) * 100 as "creditAmount",
	IFNULL(r.Delay_Count, 0) As delayCount
	FROM t_risk_order AS o
	LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
	LEFT JOIN t_risk_buyer_idcard AS c ON o.buyer_id = c.buyer_id
	LEFT JOIN (
		SELECT 
			root_order_id,
			COUNT(1) AS Delay_Count
		FROM t_risk_order
		WHERE
			type = 'loan'
				AND merchant_id = 7
				AND root_order_id IS NOT NULL
		GROUP BY
			root_order_id
	) AS r on o.root_order_id = r.root_order_id
	WHERE o.type = 'loan' AND o.status = 'payment' and  to_days(o.repayment_time) - to_days(now())  = 1
	<choose>
		<when test="page !=null and page.orderBy != null and page.orderBy != ''">
			ORDER BY ${page.orderBy}
		</when>
		<otherwise>
		</otherwise>
	</choose>
	</select>
	
	
	
	<select id = "getNewBuyerInfoByDealcode" resultType="TRiskBuyerPersonalInfo">
	  SELECT
		o.dealcode as "dealcode",
		o.create_time as "createTime",
		o.remit_time as "remitTime",
		o.repayment_time as "repaymentTime",
		o.buyer_id as "buyerId",
		o.platform_ext AS "finProduct",
		b.mobile as "mobile",
		b.mobile_city as "mobileCity",
		b.marital as "marital", 
		c.real_name as "realName",
		c.idCard as "idcard",
<!-- 		CONCAT(IFNULL(b.addr_province, ""),IFNULL(b.addr_city, ""),IFNULL(b.addr_district, ""),IFNULL(b.address, "")) as "livingAddr", -->
		CASE 
			WHEN b.addr_province IS NOT NULL 
			THEN CONCAT(IFNULL(b.addr_province, ""),IFNULL(b.addr_city, ""),IFNULL(b.addr_district, ""))
			ELSE IFNULL(b.address, "")
		END as "livingAddr",
		c.ocr_addr as "ocrAddr",
		o.days as "days",
		o.payoff_time as payOffTime,
		CASE 
			WHEN o.`status` = 'payment' THEN DATEDIFF(curdate(), o.repayment_time) 
			ELSE 0
		END as "overdueDays",
		(IFNULL(o.amount, 0) - IFNULL(o.cost_amount, 0)) * 100 as "corpusAmount",
		IFNULL(o.cost_amount, 0) * 100  as "costAmout",
		IFNULL(o.credit_amount, 0) * 100 as "amount",
		IFNULL(o.overdue_amount, 0) * 100 as "overdueAmount",
		(IFNULL(o.amount, 0) - ifnull(o.credit_amount, 0)) * 100 as "discountAmount",
		(<include refid="countBalance"/>) * 100 as "balance",
		CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) * 100 ELSE 0 END as "modifyAmount",
		(<include refid="countRemainAmmount"/>) * 100 as "creditAmount",
		IFNULL(r.Delay_Count, 0) As delayCount,
		c.sex As sex,
		IFNULL(q.bank_no,"") AS remitBankNo,
		IFNULL(q.bank_id,"") AS remitBankName,
		(IFNULL(o.credit_amount, 0) + IFNULL(o.overdue_amount, 0)  - CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) ELSE 0 END )* 100 as "repaymentAmount",
		w.payday AS "payday",
		w.salary AS "salary"
	FROM t_risk_order AS o
	LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
	LEFT JOIN t_risk_buyer_idcard AS c ON o.buyer_id = c.buyer_id
	LEFT JOIN (
		SELECT 
			root_order_id,
			COUNT(1) AS Delay_Count
		FROM t_risk_order
		WHERE
			type = 'loan'
				AND merchant_id = 7
				AND root_order_id IS NOT NULL
		GROUP BY
			root_order_id
	) AS r on o.root_order_id = r.root_order_id
	LEFT JOIN t_risk_buyer2bankinfo AS p ON o.buyer_id = p.buyer_id 
	LEFT JOIN  t_risk_bankinfo AS q ON p.bank_id = q.id
	LEFT JOIN t_risk_buyer_workinfo AS w ON b.id = w.buyer_id
	WHERE o.type = 'loan' AND o.merchant_id = 7 AND o.status in ('payment', 'payoff') and o.dealcode = #{dealcode}
	<![CDATA[
		AND NOT EXISTS (
				SELECT 
					1
				FROM t_risk_buyer_idcard AS id 
				WHERE id.buyer_id = c.buyer_id
					AND id.id > c.id
			)
	]]>
	LIMIT 1
	</select>
	
	<select  id="getMessgeByRepaymentTime" resultType="TRiskBuyerPersonalInfo">
	 SELECT
	 o.dealcode as "dealcode",
	 b.mobile AS "mobile",
	 idc.real_name AS "realName",
	 idc.sex AS "sex",
	 DATEDIFF(curdate(), o.repayment_time) as "overdueDays",
	 o.platform_ext AS "finProduct",
	(<include refid="countRemainAmmount"/>) * 100 AS "creditAmount",
	 o.repayment_time AS "repaymentTime",
	CASE WHEN   DATEDIFF( o.repayment_time,CURDATE())=1 THEN 1 
	     WHEN DATEDIFF( o.repayment_time,CURDATE())=0 THEN 0 END AS "rpayStatus"
	 FROM
	 t_risk_order AS o
	    LEFT JOIN t_risk_buyer AS b ON o.buyer_id = b.id
        LEFT JOIN t_risk_buyer_idcard AS idc ON  o.buyer_id=idc.buyer_id 
       
      WHERE
      o.type = 'loan' 
        AND o.merchant_id = 7 and
     o.status = 'payment' and
      DATEDIFF( o.repayment_time,CURDATE()) in(1,0)
</select>

<select id = "getbuyerIfo" resultType="TRiskBuyerPersonalInfo">
	  SELECT
		o.create_time as "createTime",
		o.repayment_time as "repaymentTime",
		c.real_name as "realName",
		c.idCard as "idcard",
		DATEDIFF(curdate(), o.repayment_time)  as "overdueDays",
		(IFNULL(o.credit_amount, 0) + IFNULL(o.overdue_amount, 0) - CASE WHEN o.modify_flag = 1 THEN IFNULL(o.modify_amount, 0) ELSE 0 END - IFNULL(o.balance, 0)) * 100 as "creditAmount",
		c.sex As sex
	FROM t_risk_order AS o
	LEFT JOIN t_risk_buyer_idcard AS c ON o.buyer_id = c.buyer_id
	WHERE o.type = 'loan' AND o.merchant_id = 7 AND o.status ='payment' and o.dealcode = #{dealcode} 
	</select>

	<select id="findMobileByBuyerId" resultType="String">
		SELECT
		b.mobile AS "mobile"
		FROM
		t_risk_buyer AS b
		WHERE
		b.id = #{buyerId}
	</select>
	
	<select id="getBuyerInfoByMobile" resultType="TRiskBuyerPersonalInfo">
		SELECT
			b.id AS "buyerId",
			b.mobile AS "mobile",
			IFNULL(i.real_name, '未知') AS "realName"
		FROM t_risk_buyer b
		LEFT JOIN t_risk_buyer_idcard i ON b.id = i.buyer_id
		WHERE b.mobile = #{mobile}
	</select>
</mapper>