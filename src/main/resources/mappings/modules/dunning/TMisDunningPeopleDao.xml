<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo9.risk.modules.dunning.dao.TMisDunningPeopleDao">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	<sql id="tMisDunningPeopleColumns">
		a.dbid AS "dbid",
		a.id AS "id",
		a.name AS "name",
		a.dunningpeopletype AS "dunningpeopletype",
		a.rate AS "rate",
		a.begin AS "begin",
		a.end AS "end",
		a.field1 AS "field1",
		a.createby AS "createBy.id",
		a.createdate AS "createDate",
		a.updateby AS "updateBy.id",
		a.updatedate AS "updateDate",
		a.auto AS "auto",
		a.Invalid AS "Invalid",
		a.dunningcycle AS "dunningcycle",
		a.nickname AS "nickname",
		a.groupId AS "group.id"
	</sql>
	
	<sql id="peopleJoinsColumns">
		,
		g.`type` AS "group.type",
		g.`name` AS "group.name",
		pb.bizTypes AS "bizTypesText"
	</sql>

	<sql id="tMisDunningPeopleJoins">
		LEFT JOIN t_mis_dunning_group g on g.id = a.groupId
		LEFT JOIN (
		SELECT
		dunning_people_id,
		GROUP_CONCAT(debt_biz_type) AS bizTypes
		FROM
		t_mis_dunning_people_biz
		GROUP BY
		dunning_people_id
		) AS pb ON pb.dunning_people_id = a.id
	</sql>

	<select id="get" resultType="TMisDunningPeople" useCache="false">
		SELECT
			<include refid="tMisDunningPeopleColumns"/>
			<include refid="peopleJoinsColumns"/>
		FROM t_mis_dunning_people a
		<include refid="tMisDunningPeopleJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="TMisDunningPeople" useCache="false">
		SELECT
			<include refid="tMisDunningPeopleColumns"/>
			<include refid="peopleJoinsColumns"/>
			FROM t_mis_dunning_people a
			<include refid="tMisDunningPeopleJoins"/>
		<where>
		    <!-- 只显示未删除的催收人员  -->
		    	a.Invalid = 't'
		    <if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
		    <if test="auto != null and auto != ''">
				AND a.auto = #{auto}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
			<if test="dunningpeopletype != null and dunningpeopletype != ''">
				AND a.dunningpeopletype = #{dunningpeopletype}
			</if>
			<if test="begin != null and end != null and begin != '' and end != ''">
				AND a.begin = #{begin} AND  a.end = #{end}
			</if>
			<if test="dunningcycle != null and dunningcycle != '' ">
				AND a.DunningCycle = #{dunningcycle}
			</if>
			<if test="group != null and group.id != null and group.id !='' ">
				AND a.`groupId` = #{group.id}
			</if>
			<if test="group != null and group.groupIds != null">
				AND a.`groupId` IN
				<if test="group.groupIds.size == 0">
					('')
				</if>
				<if test="group.groupIds.size > 0">
					<foreach item="groupId" collection="group.groupIds" open="(" close=")" separator=",">
						#{groupId}
					</foreach>
				</if>
			</if>
			<if test="group != null and group.queryTypes != null and group.queryTypes.size != 0 ">
				AND g.type in
				<foreach item="item" index="index" collection="group.queryTypes" open="(" separator="," close=")">
            #{item}
        </foreach>
			</if>
      <if test="bizTypes != null and bizTypes.size != 0 ">
				AND pb.bizTypes LIKE concat
        <foreach item="item" index="index" collection="bizTypes" open="(" separator=", ',' ," close=")">
          #{item}
        </foreach>
      </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} a.CreateDate desc
			</when>
			<otherwise>
			    ORDER BY a.CreateDate desc
			</otherwise>
		</choose>
	</select>

	<select id="findOptionList" resultType="TMisDunningPeople">
		SELECT
			a.`nickname` ,
			a.`name` ,
			a.`id`
		FROM t_mis_dunning_people a
		WHERE
			a.Invalid = 't'
		<if test="group != null and group.id != null and group.id !='' ">
			AND a.`groupId` = #{group.id}
		</if>
		<if test="group != null and group.groupIds != null">
			AND a.`groupId` IN
			<if test="group.groupIds.size == 0">
				('')
			</if>
			<if test="group.groupIds.size > 0">
				<foreach item="item" collection="group.groupIds" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%')
		</if>
		<if test="nickname != null and nickname != ''">
			AND a.nickname LIKE concat('%',#{nickname},'%')
		</if>
	</select>
	
	<select id="findAllList" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
			<include refid="peopleJoinsColumns"/>
		FROM t_mis_dunning_people a
		<include refid="tMisDunningPeopleJoins"/>
		<where>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} desc
			</when>
			<otherwise>
			    ORDER BY a.begin desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findUserList" resultType="com.thinkgem.jeesite.modules.sys.entity.User" useCache="false">
		SELECT 
			u.*
			FROM sys_user u
			LEFT JOIN t_mis_dunning_people p on p.id = u.id
		WHERE 
			p.id is NULL  and u.del_flag = 0
	</select>

	<select id="findDunningPeopleByType" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
		<!-- 只显示未删除的催收人员  -->
		WHERE a.dunningpeopletype = #{peopleType} and a.Invalid = 't'
	</select>	
		
	<select id="findDunningPeopleCycleByIds" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			a.begin AS "begin",
			a.end AS "end"
		FROM t_mis_dunning_people a
			WHERE a.Id in 
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
		GROUP BY  BEGIN,END 
	</select>	
	
	<select id="findDunningPeopleGroupby" resultType="TMisDunningPeople" useCache="false">
		SELECT
			a.begin AS "begin",
			a.end AS "end"
		FROM t_mis_dunning_people a
			WHERE a.Invalid = 't'
		GROUP BY  BEGIN,END 
	</select>	
	
	<insert id="insert">
		INSERT INTO t_mis_dunning_people(
			id,
			name,
<!-- 			dunningpeopletype, -->
			rate,
			begin,
			end,
			field1,
			auto,
			createby,
			createdate,
			updateby,
			updatedate,
			dunningcycle,
			nickname,
			groupId,
			extensionNumber
		) VALUES (
			#{id},
			#{name},
<!-- 			#{dunningpeopletype}, -->
			#{rate},
			#{begin},
			#{end},
			'active',
			#{auto},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{dunningcycle},
			#{nickname},
			#{group.id},
			#{extensionNumber}
		)
	</insert>

	<insert id="batchInsertPeopleBizTypes">
		INSERT INTO t_mis_dunning_people_biz(
			dunning_people_id,
			debt_biz_type
		) VALUES
		<foreach collection="bizTypes"  index="index" item="item" separator=",">
			(
				#{peopleId},
				#{item}
			)
		</foreach>
	</insert>

	<update id="update">
		UPDATE t_mis_dunning_people SET 
<!-- 			dunningpeopletype = #{dunningpeopletype}, -->
			rate = #{rate},
			begin = #{begin},
			end = #{end},
<!-- 			field1 = #{field1}, -->
			auto = #{auto},
			updateby = #{updateBy.id},
			updatedate = #{updateDate},
<!-- 			催收队列添加后只能在列表中手动修改 -->
<!-- 			dunningcycle = #{dunningcycle}, -->
			nickname = #{nickname},
			groupId = #{group.id},
			extensionNumber = #{extensionNumber}
		WHERE dbid = #{dbid}
	</update>
	
	<update id="delete">
		UPDATE t_mis_dunning_people SET 
			Invalid = 'f',
			auto = 'f',
			field1 = 'leave'
		WHERE id = #{id}
	</update>

	<select id="findByPeriod" resultType="TMisDunningPeople" parameterType="map" useCache="false">
	    <!-- 只显示未删除的催收人员  -->
		select * from t_mis_dunning_people where auto = 't' and Invalid = 't' and begin = #{BEGIN} and end = #{END} 
		<!-- and DunningPeopleType=#{PEOPLE_TYPE}  -->
	</select>
	
	
	<select id="findPeopleBybeginEnd" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
			WHERE  a.Invalid = 't'
		<if test="begin != null and end != null ">
			AND a.begin = #{begin} AND  a.end = #{end}
		</if>
	</select>
	
	<select id="findPeopleByDunningcycle" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
		WHERE a.DunningCycle LIKE concat('%',#{dunningcycle},'%')  and a.Invalid = 't' and a.auto = 't'
<!-- 		AND a.DunningCycle LIKE concat('%',#{dunningcycle},'%') -->
	</select>	
	
	<select id="findPeopleSumcorpusamountByDunningcycle" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>,
			SUM(IFNULL(t.corpusamount,0)) AS "sumcorpusamount"
		FROM t_mis_dunning_people a
			LEFT JOIN t_mis_dunning_task_log t on t.dunningpeopleid = a.Id 
<!-- 			AND date(t.createdate)= date(DATE_SUB(curdate(),INTERVAL 1 DAY))  -->
			AND date(t.createdate) BETWEEN date(#{begindatetime}) AND date(#{enddatetime})
			AND  t.behaviorstatus = 'in' 
			AND  t.createby = 'auto_admin'
			AND  t.DunningCycle = #{dunningcycle}
		WHERE a.DunningCycle LIKE concat('%',#{dunningcycle},'%')  AND a.Invalid = 't' AND a.auto = 't'
			GROUP BY a.Id
			ORDER BY sumcorpusamount
	</select>	
	
	<select id="findPeopleByDistributionDunningcycle" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
		WHERE 
		a.DunningCycle LIKE concat('%',#{dunningcycle},'%')  
		AND a.Invalid = 't' 
	</select>	
	<select id="findPeopleByCycleTypeAutoName" resultType="TMisDunningPeople" useCache="false">
		SELECT
		    <include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
		     LEFT JOIN t_mis_dunning_group g ON a.GroupId=g.Id
		WHERE
		    a.Invalid = 't'
		<if test="dunningcycle != null and dunningcycle.length > 0">
			AND
			<foreach item="item" collection="dunningcycle" open="(" separator=" OR " close=")">
				dunningcycle LIKE CONCAT('%',#{item},'%')
			</foreach>
		</if>
		<if test="type != null and type.length > 0">
			AND g.type IN
			<foreach item="item" collection="type" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="auto != null and auto.length > 0">
			AND a.auto IN
			<foreach item="item" collection="auto" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="name != null and name != ''">
			AND a.groupId = #{name}
		</if>
		<if test="dunningpeoplename != null and dunningpeoplename != ''">
			AND a.name LIKE concat('%',#{dunningpeoplename},'%')
		</if>
	</select>
	 <update id="batchUpdateDunningcycle">
		UPDATE t_mis_dunning_people SET 	
			updatedate = now(),
			updateby = #{userid},
			dunningcycle = #{dunningcycle}
		WHERE id in 
		<foreach item="item" index="index" collection="pids" open="(" separator="," close=")">
            #{item}
        </foreach>
	</update>
	 <update id="operationUpdate">
		UPDATE t_mis_dunning_people SET 	
			updatedate = now(),
			updateby = #{userId},
			<if test="tMisDunningPeople.group != null and tMisDunningPeople.group.id != null and tMisDunningPeople.group.id != '' ">
			 groupId= #{tMisDunningPeople.group.id }
			</if>
			<if test="tMisDunningPeople.auto != null and tMisDunningPeople.auto != '' ">
			auto = #{tMisDunningPeople.auto}
			</if>
		WHERE id in 
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
	</update>
	
	 <select id="findPeoplesByids" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			<include refid="tMisDunningPeopleColumns"/>
		FROM t_mis_dunning_people a
		WHERE
		a.DunningCycle LIKE concat('%',#{dunningcycle},'%')  
		AND a.Invalid = 't' 
<!-- 		AND a.auto = 't' -->
		AND id in 
		<foreach item="item" index="index" collection="pids" open="(" separator="," close=")">
            #{item}
        </foreach>
	</select>
	
	 <select id="checkNicknameUnique" resultType="Boolean" useCache="false">
		SELECT 
			IF(COUNT(*)=0,TRUE,FALSE)AS result
		FROM t_mis_dunning_people a
		WHERE
		a.Nickname = #{nickname}
		AND a.Invalid = 't' 
		<if test="id != null and id != ''">
			AND a.id != #{id}
		</if>
	</select>
	
	<update id="updatePeopleNameById">
		UPDATE t_mis_dunning_people SET
			name = #{name}
		WHERE id = #{id}
	</update>
	
	
	<select id="findAgentPeopleList" resultType="TMisDunningPeople" useCache="false">
		SELECT 
			a.id,
			a.nickname
		FROM t_mis_dunning_people a
		left join t_mis_agent_info t on  a.id=t.peopleId
		WHERE
		 t.peopleId is null
		 and 
		 a.nickname is not null
	</select>
	
	<select id="validateBatchAccountAndGroup" resultType="TMisDunningPeople" useCache="false">
	 SELECT
	(
		SELECT
			id 
		FROM
			t_mis_dunning_group
		WHERE
			`Name` = #{groupName}
			and DelFlag = '0'
		LIMIT 1
	) AS 'group.id',
	(
		SELECT
			id
		FROM
			sys_user
		WHERE
			login_name = #{name}
			and del_flag ='0'
		LIMIT 1
	) as 'id',
	(
		SELECT
			name
		FROM
			sys_user
		WHERE
			login_name = #{name}
			and del_flag ='0'
		LIMIT 1
	) as 'name',
	(
		SELECT
			nickname 
		FROM
			t_mis_dunning_people
		WHERE
			nickname = #{nickname}
			and
			Invalid='t'
		LIMIT 1
	)as 'nickname',
	(
		SELECT
			id 
		FROM
			t_mis_dunning_people
		WHERE
			id = (SELECT id FROM sys_user WHERE login_name = #{name})
		LIMIT 1
	)as 'validateId'
	
	</select>

	<delete id="deleteBizTypeByPeopleId" >
		DELETE FROM t_mis_dunning_people_biz
		WHERE dunning_people_id = #{id}
	</delete>

</mapper>